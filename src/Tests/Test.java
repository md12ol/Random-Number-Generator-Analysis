package Tests;

import java.io.IOException;
import java.io.Writer;
import java.util.ArrayList;

/**
 * Outlines common methods that all tests need to implement and provides utility methods that are
 * needed by some of the tests.
 */
public interface Test {

  /**
   * Prints toPrint to console and to out.
   *
   * @param toPrint what is to be printed
   * @param out where toPrint is to be printed
   */
  static void print(String toPrint, Writer out) {
    try {
      out.write(toPrint);
    } catch (IOException e) {
      e.printStackTrace();
      System.out.println("Error writing to file");
    }
    System.out.print(toPrint);
  } // print

  /**
   * Prints toPrint to console and to out.
   *
   * @param toPrint what is to be printed
   * @param out where toPrint is to be printed
   */
  static void print(int toPrint, Writer out) {
    print(String.valueOf(toPrint), out);
  } // print

  /**
   * Prints toPrint to console and to out.
   *
   * @param toPrint what is to be printed
   * @param out where toPrint is to be printed
   */
  static void print(double toPrint, Writer out) {
    print(String.valueOf(toPrint), out);
  } // print

  /**
   * Prints toPrint and a new line to console and to out.
   *
   * @param toPrint what is to be printed
   * @param out where toPrint is to be printed
   */
  static void println(String toPrint, Writer out) {
    print(toPrint, out);
    print("\n", out);
  } // println

  /**
   * Prints toPrint and a new line to console and to out.
   *
   * @param toPrint what is to be printed
   * @param out where toPrint is to be printed
   */
  static void println(int toPrint, Writer out) {
    print(toPrint, out);
    print("\n", out);
  } // println

  /**
   * Prints toPrint and a new line to console and to out.
   *
   * @param toPrint what is to be printed
   * @param out where toPrint is to be printed
   */
  static void println(double toPrint, Writer out) {
    print(String.valueOf(toPrint), out);
    print("\n", out);
  } // println

  /**
   * Prints the results from the randomness test applied to integers generated via a random number
   * generator.
   *
   * @param results results from the test
   */
  void printIntResults(double[] results);

  /**
   * Prints the results from the randomness test applied to booleans generated via a random number
   * generator.
   *
   * @param results results from the test
   */
  void printBoolResults(double[] results);

  /**
   * Conducts a randomness test on a list of integers generated from a random number generator.
   *
   * @param nums numbers generated by random number generator
   * @return array of test results
   */
  double[] intTest(ArrayList<Integer> nums);

  /**
   * Conducts a randomness test on a list of booleans generated from a random number generator.
   *
   * @param bools booleans generated by random number generator
   * @return array of test results
   */
  double[] boolTest(ArrayList<Boolean> bools);

}
